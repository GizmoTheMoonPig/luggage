plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'eclipse'
    id 'maven-publish'
    id 'io.github.juuxel.loom-quiltflower' version '1.+'
    id 'org.quiltmc.quilt-mappings-on-loom' version '4.+'
}

version = '1.4.2'
group = 'com.gizmo.luggage'
archivesBaseName = 'luggage'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    // dev env
    minecraft("com.mojang:minecraft:1.19")
    mappings loom.layered {
        it.addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:1.18.2+build.22:v2"))
        // https://lambdaurora.dev/tools/import_quilt.html
        it.parchment("org.parchmentmc.data:parchment-1.18.2:BLEEDING-20220313.132143-1@zip")
        // https://ldtteam.jfrog.io/ui/native/parchmentmc-public/org/parchmentmc/data/parchment-1.18.1/BLEEDING-SNAPSHOT
        it.officialMojangMappings {
            setNameSyntheticMembers(false)
        }
    }
    modImplementation("net.fabricmc:fabric-loader:0.14.8")


    // dependencies
    modImplementation("net.fabricmc.fabric-api:fabric-api:0.50.0+1.18.2")
}

loom.accessWidenerPath = file("src/main/resources/luggage.accesswidener")

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Luggage",
                "Specification-Vendor"    : "GizmoTheMoonPig",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : "Luggage",
                "Implementation-Version"  : "1.4.2",
                "Implementation-Vendor"   : "GizmoTheMoonPig",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
