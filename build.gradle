plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'eclipse'
    id 'maven-publish'
    id 'io.github.juuxel.loom-quiltflower' version '1.+'
    id 'org.quiltmc.quilt-mappings-on-loom' version '4.+'
}

version = '1.19-1.5.2'
group = 'com.gizmo.luggage'
archivesBaseName = 'luggage'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://jitpack.io" }
}

dependencies {
    // dev env
    // https://fabricmc.net/develop/
    minecraft("com.mojang:minecraft:1.19.2")
    mappings loom.officialMojangMappings()
    modImplementation("net.fabricmc:fabric-loader:0.14.9")

    // dependencies
    modImplementation("net.fabricmc.fabric-api:fabric-api:0.60.0+1.19.2")
    modImplementation(include("io.github.fabricators_of_create.Porting-Lib:tags:2.1.687+1.19.2"))

    implementation(include("com.github.LlamaLad7:MixinExtras:0.1.1"))
    annotationProcessor("com.github.LlamaLad7:MixinExtras:0.1.1")
    implementation("javax.annotation:javax.annotation-api:1.3.2")
    implementation("com.google.code.findbugs:jsr305:3.0.2")
}

loom.accessWidenerPath = file("src/main/resources/luggage.accesswidener")

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Luggage",
                "Specification-Vendor"    : "GizmoTheMoonPig",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : "Luggage",
                "Implementation-Version"  : "1.5.1",
                "Implementation-Vendor"   : "GizmoTheMoonPig",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

jar.finalizedBy('remapJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
